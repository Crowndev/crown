# Copyright (c) 2013-2016 The Crown Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

bin_PROGRAMS += qt/crown-qt

if BUILD_CROWN_GUI
  bin_PROGRAMS += crown-gui
endif

EXTRA_LIBRARIES += qt/libcrownqt.a

# crown qt core #
include Makefile.qt_locale.include

QT_FORMS_UI = \
  qt/forms/addressbookpage.ui \
  qt/forms/askpassphrasedialog.ui \
  qt/forms/coincontroldialog.ui \
  qt/forms/createwalletdialog.ui \
  qt/forms/editaddressdialog.ui \
  qt/forms/helpmessagedialog.ui \
  qt/forms/intro.ui \
  qt/forms/modaloverlay.ui \
  qt/forms/openuridialog.ui \
  qt/forms/optionsdialog.ui \
  qt/forms/overviewpage.ui \
  qt/forms/psbtoperationsdialog.ui \
  qt/forms/receivecoinsdialog.ui \
  qt/forms/receiverequestdialog.ui \
  qt/forms/debugwindow.ui \
  qt/forms/sendcoinsdialog.ui \
  qt/forms/sendcoinsentry.ui \
  qt/forms/signverifymessagedialog.ui \
  qt/forms/transactiondescdialog.ui \
  qt/forms/createnodedialog.ui \
  qt/forms/startmissingdialog.ui \
  qt/forms/assetmanagerpage.ui \
  qt/forms/newassetpage.ui \
  qt/forms/nodemanager.ui  
# \
#  qt/forms/multisigaddressentry.ui \
#  qt/forms/multisigdialog.ui \
#  qt/forms/multisiginputentry.ui

QT_MOC_CPP = \
  qt/moc_addressbookpage.cpp \
  qt/moc_addresstablemodel.cpp \
  qt/moc_assetfilterproxy.cpp \
  qt/moc_assettablemodel.cpp \
  qt/moc_askpassphrasedialog.cpp \
  qt/moc_createwalletdialog.cpp \
  qt/moc_bantablemodel.cpp \
  qt/moc_crownaddressvalidator.cpp \
  qt/moc_crownamountfield.cpp \
  qt/moc_crown.cpp \
  qt/moc_crowngui.cpp \
  qt/moc_crownunits.cpp \
  qt/moc_clientmodel.cpp \
  qt/moc_coincontrolmodel.cpp \
  qt/moc_coincontroldialog.cpp \
  qt/moc_coincontroltreewidget.cpp \
  qt/moc_coincontrolfilterproxy.cpp \
  qt/moc_csvmodelwriter.cpp \
  qt/moc_editaddressdialog.cpp \
  qt/moc_guiutil.cpp \
  qt/moc_intro.cpp \
  qt/moc_macdockiconhandler.cpp \
  qt/moc_macnotificationhandler.cpp \
  qt/moc_modaloverlay.cpp \
  qt/moc_notificator.cpp \
  qt/moc_openuridialog.cpp \
  qt/moc_optionsdialog.cpp \
  qt/moc_optionsmodel.cpp \
  qt/moc_overviewpage.cpp \
  qt/moc_peertablemodel.cpp \
  qt/moc_paymentserver.cpp \
  qt/moc_psbtoperationsdialog.cpp \
  qt/moc_qrimagewidget.cpp \
  qt/moc_qvalidatedlineedit.cpp \
  qt/moc_qvaluecombobox.cpp \
  qt/moc_receivecoinsdialog.cpp \
  qt/moc_receiverequestdialog.cpp \
  qt/moc_recentrequeststablemodel.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_sendcoinsdialog.cpp \
  qt/moc_sendcollateraldialog.cpp \
  qt/moc_sendcoinsentry.cpp \
  qt/moc_signverifymessagedialog.cpp \
  qt/moc_splashscreen.cpp \
  qt/moc_trafficgraphwidget.cpp \
  qt/moc_transactiondesc.cpp \
  qt/moc_transactiondescdialog.cpp \
  qt/moc_transactionfilterproxy.cpp \
  qt/moc_transactionoverviewwidget.cpp \
  qt/moc_transactiontablemodel.cpp \
  qt/moc_transactionview.cpp \
  qt/moc_utilitydialog.cpp \
  qt/moc_walletcontroller.cpp \
  qt/moc_walletframe.cpp \
  qt/moc_privatekeywidget.cpp \
  qt/moc_createsystemnodedialog.cpp \
  qt/moc_createmasternodedialog.cpp \
  qt/moc_createnodedialog.cpp \
  qt/moc_startmissingdialog.cpp \
  qt/moc_walletmodel.cpp \
  qt/moc_walletview.cpp \
  qt/moc_assetmanagerpage.cpp \
  qt/moc_newassetpage.cpp \
  qt/moc_nodemanager.cpp  
# \
#  qt/moc_multisigaddressentry.cpp \
#  qt/moc_multisigdialog.cpp \
#  qt/moc_multisiginputentry.cpp

CROWN_MM = \
  qt/macdockiconhandler.mm \
  qt/macnotificationhandler.mm \
  qt/macos_appnap.mm

QT_MOC = \
  qt/crownamountfield.moc \
  qt/intro.moc \
  qt/overviewpage.moc \
  qt/rpcconsole.moc

QT_QRC_CPP = qt/qrc_crown.cpp
QT_QRC = qt/crown.qrc
QT_QRC_LOCALE_CPP = qt/qrc_crown_locale.cpp
QT_QRC_LOCALE = qt/crown_locale.qrc

CROWN_QT_H = \
  qt/addressfilterproxymodel.h \
  qt/addressbookpage.h \
  qt/addresstablemodel.h \
  qt/assetfilterproxy.h \
  qt/assettablemodel.h \
  qt/askpassphrasedialog.h \
  qt/bantablemodel.h \
  qt/crownaddressvalidator.h \
  qt/crownamountfield.h \
  qt/crown.h \
  qt/crowngui.h \
  qt/crownunits.h \
  qt/clientmodel.h \
  qt/coincontroldialog.h \
  qt/coincontroltreewidget.h \
  qt/createwalletdialog.h \
  qt/csvmodelwriter.h \
  qt/editaddressdialog.h \
  qt/coincontrolfilterproxy.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/intro.h \
  qt/macdockiconhandler.h \
  qt/macnotificationhandler.h \
  qt/macos_appnap.h \
  qt/modaloverlay.h \
  qt/networkstyle.h \
  qt/notificator.h \
  qt/openuridialog.h \
  qt/optionsdialog.h \
  qt/optionsmodel.h \
  qt/overviewpage.h \
  qt/paymentserver.h \
  qt/peertablemodel.h \
  qt/platformstyle.h \
  qt/psbtoperationsdialog.h \
  qt/qrimagewidget.h \
  qt/qvalidatedlineedit.h \
  qt/qvaluecombobox.h \
  qt/receivecoinsdialog.h \
  qt/receiverequestdialog.h \
  qt/recentrequeststablemodel.h \
  qt/rpcconsole.h \
  qt/sendcoinsdialog.h \
  qt/sendcoinsentry.h \
  qt/sendcoinsrecipient.h \
  qt/sendcollateraldialog.h \
  qt/signverifymessagedialog.h \
  qt/splashscreen.h \
  qt/datetablewidgetitem.h \
  qt/privatekeywidget.h \
  qt/createsystemnodedialog.h \
  qt/createmasternodedialog.h \
  qt/createnodedialog.h \
  qt/startmissingdialog.h \
  qt/trafficgraphwidget.h \
  qt/transactiondesc.h \
  qt/transactiondescdialog.h \
  qt/transactionfilterproxy.h \
  qt/transactionoverviewwidget.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/transactionview.h \
  qt/utilitydialog.h \
  qt/walletcontroller.h \
  qt/walletframe.h \
  qt/walletmodel.h \
  qt/walletmodeltransaction.h \
  qt/walletview.h \
  qt/winshutdownmonitor.h \
  qt/assetmanagerpage.h \
  qt/newassetpage.h \
  qt/nodemanager.h  
# \
#  qt/multisigaddressentry.h \
#  qt/multisigdialog.h \
#  qt/multisiginputentry.h

RES_ICONS = \
  qt/res/icons/add.png \
  qt/res/icons/address-book.png \
  qt/res/icons/crown.ico \
  qt/res/icons/crown_testnet.ico \
  qt/res/icons/crown.png \
  qt/res/icons/chevron.png \
  qt/res/icons/clock1.png \
  qt/res/icons/clock2.png \
  qt/res/icons/clock3.png \
  qt/res/icons/clock4.png \
  qt/res/icons/clock5.png \
  qt/res/icons/connect0.png \
  qt/res/icons/connect1.png \
  qt/res/icons/connect2.png \
  qt/res/icons/connect3.png \
  qt/res/icons/connect4.png \
  qt/res/icons/edit.png \
  qt/res/icons/editcopy.png \
  qt/res/icons/editpaste.png \
  qt/res/icons/export.png \
  qt/res/icons/eye.png \
  qt/res/icons/eye_minus.png \
  qt/res/icons/eye_plus.png \
  qt/res/icons/fontbigger.png \
  qt/res/icons/fontsmaller.png \
  qt/res/icons/hd_disabled.png \
  qt/res/icons/hd_enabled.png \
  qt/res/icons/history.png \
  qt/res/icons/lock_closed.png \
  qt/res/icons/lock_open.png \
  qt/res/icons/network_disabled.png \
  qt/res/icons/overview.png \
  qt/res/icons/proxy.png \
  qt/res/icons/receive.png \
  qt/res/icons/remove.png \
  qt/res/icons/send.png \
  qt/res/icons/synced.png \
  qt/res/icons/masternode.png \
  qt/res/icons/systemnode.png \
  qt/res/icons/transaction0.png \
  qt/res/icons/transaction2.png \
  qt/res/icons/transaction_abandoned.png \
  qt/res/icons/transaction_conflicted.png \
  qt/res/icons/tx_inout.png \
  qt/res/icons/tx_input.png \
  qt/res/icons/tx_output.png \
  qt/res/icons/tx_mined.png \
  qt/res/icons/warning.png

CROWN_QT_BASE_CPP = \
  qt/bantablemodel.cpp \
  qt/crown.cpp \
  qt/crownaddressvalidator.cpp \
  qt/crownamountfield.cpp \
  qt/crowngui.cpp \
  qt/crownunits.cpp \
  qt/clientmodel.cpp \
  qt/csvmodelwriter.cpp \
  qt/guiutil.cpp \
  qt/intro.cpp \
  qt/modaloverlay.cpp \
  qt/networkstyle.cpp \
  qt/notificator.cpp \
  qt/optionsdialog.cpp \
  qt/optionsmodel.cpp \
  qt/peertablemodel.cpp \
  qt/platformstyle.cpp \
  qt/qvalidatedlineedit.cpp \
  qt/qvaluecombobox.cpp \
  qt/rpcconsole.cpp \
  qt/splashscreen.cpp \
  qt/trafficgraphwidget.cpp \
  qt/utilitydialog.cpp

CROWN_QT_WINDOWS_CPP = qt/winshutdownmonitor.cpp

CROWN_QT_WALLET_CPP = \
  qt/addressbookpage.cpp \
  qt/addressfilterproxymodel.cpp \
  qt/addresstablemodel.cpp \
  qt/assetfilterproxy.cpp \
  qt/assettablemodel.cpp \
  qt/coincontrolmodel.cpp \
  qt/coincontrolfilterproxy.cpp \
  qt/askpassphrasedialog.cpp \
  qt/coincontroldialog.cpp \
  qt/coincontroltreewidget.cpp \
  qt/createwalletdialog.cpp \
  qt/editaddressdialog.cpp \
  qt/openuridialog.cpp \
  qt/overviewpage.cpp \
  qt/paymentserver.cpp \
  qt/psbtoperationsdialog.cpp \
  qt/qrimagewidget.cpp \
  qt/receivecoinsdialog.cpp \
  qt/receiverequestdialog.cpp \
  qt/recentrequeststablemodel.cpp \
  qt/sendcoinsdialog.cpp \
  qt/sendcollateraldialog.cpp \
  qt/sendcoinsentry.cpp \
  qt/signverifymessagedialog.cpp \
  qt/datetablewidgetitem.cpp \
  qt/createnodedialog.cpp \
  qt/startmissingdialog.cpp \
  qt/createsystemnodedialog.h \
  qt/createmasternodedialog.h \
  qt/transactiondesc.cpp \
  qt/transactiondescdialog.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/transactionview.cpp \
  qt/walletcontroller.cpp \
  qt/walletframe.cpp \
  qt/walletmodel.cpp \
  qt/walletmodeltransaction.cpp \
  qt/privatekeywidget.cpp \
  qt/walletview.cpp \
  qt/assetmanagerpage.cpp \
  qt/newassetpage.cpp \
  qt/nodemanager.cpp      
# \
#  qt/multisigaddressentry.cpp \
#  qt/multisigdialog.cpp \
#  qt/multisiginputentry.cpp

CROWN_QT_CPP = $(CROWN_QT_BASE_CPP)
if TARGET_WINDOWS
CROWN_QT_CPP += $(CROWN_QT_WINDOWS_CPP)
endif
if ENABLE_WALLET
CROWN_QT_CPP += $(CROWN_QT_WALLET_CPP)
endif # ENABLE_WALLET

RES_ANIMATION = $(wildcard $(srcdir)/qt/res/animation/spinner-*.png)

CROWN_RC = qt/res/crown-qt-res.rc

CROWN_QT_INCLUDES = -DQT_NO_KEYWORDS

qt_libcrownqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(CROWN_INCLUDES) $(CROWN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(QR_CFLAGS)
qt_libcrownqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
qt_libcrownqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS)

qt_libcrownqt_a_SOURCES = $(CROWN_QT_CPP) $(CROWN_QT_H) $(QT_FORMS_UI) \
  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(RES_ICONS) $(RES_ANIMATION)
if TARGET_DARWIN
  qt_libcrownqt_a_SOURCES += $(CROWN_MM)
endif

nodist_qt_libcrownqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)

# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
$(QT_MOC): $(QT_FORMS_H)
$(qt_libcrownqt_a_OBJECTS) $(qt_crown_qt_OBJECTS) $(crown_gui_OBJECTS) : | $(QT_MOC)

# crown-qt and crown-gui binaries #
crown_qt_cppflags = $(AM_CPPFLAGS) $(CROWN_INCLUDES) $(CROWN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QR_CFLAGS)
crown_qt_cxxflags = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)

crown_qt_sources = qt/main.cpp
if TARGET_WINDOWS
  crown_qt_sources += $(CROWN_RC)
endif
crown_qt_ldadd = qt/libcrownqt.a $(LIBCROWN_SERVER)
if ENABLE_WALLET
crown_qt_ldadd += $(LIBCROWN_UTIL) $(LIBCROWN_WALLET)
endif
if ENABLE_ZMQ
crown_qt_ldadd += $(LIBCROWN_ZMQ) $(ZMQ_LIBS)
endif
crown_qt_ldadd += $(LIBCROWN_CLI) $(LIBCROWN_COMMON) $(LIBCROWN_UTIL) $(LIBCROWN_CONSENSUS) $(LIBCROWN_CRYPTO) $(LIBCROWN_SMSG) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \
  $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \
  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(SQLITE_LIBS)
crown_qt_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
crown_qt_libtoolflags = $(AM_LIBTOOLFLAGS) --tag CXX

qt_crown_qt_CPPFLAGS = $(crown_qt_cppflags)
qt_crown_qt_CXXFLAGS = $(crown_qt_cxxflags)
qt_crown_qt_SOURCES = $(crown_qt_sources)
qt_crown_qt_LDADD = $(crown_qt_ldadd)
qt_crown_qt_LDFLAGS = $(crown_qt_ldflags)
qt_crown_qt_LIBTOOLFLAGS = $(crown_qt_libtoolflags)

crown_gui_CPPFLAGS = $(crown_qt_cppflags)
crown_gui_CXXFLAGS = $(crown_qt_cxxflags)
crown_gui_SOURCES = $(crown_qt_sources)
crown_gui_LDADD = $(crown_qt_ldadd)
crown_gui_LDFLAGS = $(crown_qt_ldflags)
crown_gui_LIBTOOLFLAGS = $(crown_qt_libtoolflags)

#locale/foo.ts -> locale/foo.qm
QT_QM=$(QT_TS:.ts=.qm)

SECONDARY: $(QT_QM)

$(srcdir)/qt/crownstrings.cpp: FORCE
	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
	$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) COPYRIGHT_HOLDERS="$(COPYRIGHT_HOLDERS)" $(PYTHON) ../share/qt/extract_strings_qt.py $(libcrown_server_a_SOURCES) $(libcrown_wallet_a_SOURCES) $(libcrown_common_a_SOURCES) $(libcrown_zmq_a_SOURCES) $(libcrown_consensus_a_SOURCES) $(libcrown_util_a_SOURCES)

translate: $(srcdir)/qt/crownstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(CROWN_QT_BASE_CPP) qt/crown.cpp $(CROWN_QT_WINDOWS_CPP) $(CROWN_QT_WALLET_CPP) $(CROWN_QT_H) $(CROWN_MM)
	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/crown_en.ts

$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
	@test -f $(RCC)
	@cp -f $< $(@D)/temp_$(<F)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name crown_locale $(@D)/temp_$(<F) | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@
	@rm $(@D)/temp_$(<F)

$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_ANIMATION)
	@test -f $(RCC)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name crown $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

CLEAN_QT = $(nodist_qt_libcrownqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno qt/temp_crown_locale.qrc

CLEANFILES += $(CLEAN_QT)

crown_qt_clean: FORCE
	rm -f $(CLEAN_QT) $(qt_libcrownqt_a_OBJECTS) $(qt_crown_qt_OBJECTS) qt/crown-qt$(EXEEXT) $(LIBCROWNQT)
	rm -rf qt/android/build qt/android/libs qt/android/gradle qt/android/.gradle

crown_qt : qt/crown-qt$(EXEEXT)

APK_LIB_DIR = qt/android/libs/$(ANDROID_ARCH)
QT_BASE_VERSION = $(lastword $(shell $(MOC) --version))
QT_BASE_PATH = $(shell find ../depends/sources/ -maxdepth 1 -type f -regex ".*qtbase.*$(QT_BASE_VERSION)\.tar.xz")
QT_BASE_TLD = $(shell tar tf $(QT_BASE_PATH) --exclude='*/*')

crown_qt_apk: FORCE
	mkdir -p $(APK_LIB_DIR)
	cp $(dir $(lastword $(CC)))../sysroot/usr/lib/$(host_alias)/libc++_shared.so $(APK_LIB_DIR)
	tar xf $(QT_BASE_PATH) -C qt/android/src/ $(QT_BASE_TLD)src/android/jar/src --strip-components=5
	tar xf $(QT_BASE_PATH) -C qt/android/src/ $(QT_BASE_TLD)src/android/java/src --strip-components=5
	cp qt/crown-qt $(APK_LIB_DIR)/libcrown-qt_$(ANDROID_ARCH).so
	cd qt/android && gradle wrapper --gradle-version=6.7.1
	cd qt/android && ./gradlew build

ui_%.h: %.ui
	@test -f $(UIC)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

%.moc: %.cpp
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

moc_%.cpp: %.h
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

%.qm: %.ts
	@test -f $(LRELEASE)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@
